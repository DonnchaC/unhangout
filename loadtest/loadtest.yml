---
- name: Create loadtesters
  hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
    - vars/secrets.yml
    - vars/loadtest.yml
  tasks:
    - name: Launch ec2 instances
      ec2:
        aws_access_key: "{{aws_access_key}}"
        aws_secret_key: "{{aws_secret_key}}"
        key_name: "{{ec2_key_name}}"
        instance_type: "{{ec2_instance_type}}"
        image: "{{ec2_image}}"
        region: "{{ec2_region}}"
        count: "{{ec2_count}}"
        group_id: "{{ec2_security_group_id}}"
        wait: true
        instance_tags: "{{ec2_instance_tags}}"
      register: ec2group

    - name: Add instances to host group
      add_host: hostname={{item.public_ip}} groupname=loadtesters
      with_items: '{{ec2group.instances}}'

    - name: Pause for a moment
      pause: seconds=10

    - name: Wait for SSH to come up.
      wait_for: host={{item.public_dns_name}} port=22 timeout=320 state=started
      with_items: '{{ec2group.instances}}'

    - set_fact: loadtesters={{ec2group}}

- name: Configure loadtesters
  hosts: loadtesters
  become: True
  gather_facts: True
  vars_files:
    - vars/secrets.yml
    - vars/loadtest.yml
  tasks:
    - name: Copy loadtest script
      copy: src={{item}}  dest=/home/ubuntu/{{item}}
      with_items:
        - loadtest.py
        - howl.py

    - name: Install prerequisites
      apt: pkg={{item}} state=present update_cache=yes
      with_items:
       - python3-pip

    - name: Install python prerequisites
      pip: name={{item}} state=present executable=pip3
      with_items:
       - requests
       - websockets

    - name: Run loadtest
      command: >
        python3 /home/ubuntu/loadtest.py {{loadtest_url}} {{loadtest_slug}}
        --user-range-min={{loadtest_user_min}}
        --user-range-max={{loadtest_user_max}}
        --password={{loadtest_user_password}}
      async: "{{max_test_duration}}"
      poll: 0

- name: Wait
  hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
    - vars/secrets.yml
    - vars/loadtest.yml
  tasks:
    - pause: prompt="Check things at {{loadtest_url}}/event/{{loadtest_slug}}/. Hit Ctrl-C followed by C to continue and terminate instances." seconds={{max_test_duration}}

- name: Kill loadtesters
  hosts: loadtesters
  become: True
  become_user: root
  gather_facts: False
  tasks:
   - name: Kill loadtest.py
     command: pkill -f loadtest.py -SIGINT
     ignore_errors: yes

   - name: Wait for loadtest.py to end
     command: pgrep -f loadtest.py
     failed_when: False
     register: pgrep_result
     until: pgrep_result.rc == 1
     retries: 30
     delay: 10

- name: Terminate instances
  gather_facts: False
  hosts: localhost
  connection: local
  vars_files:
    - vars/secrets.yml
    - vars/loadtest.yml
  tasks:
    - name: Terminate instances
      ec2:
        state: 'absent'
        aws_access_key: "{{aws_access_key}}"
        aws_secret_key: "{{aws_secret_key}}"
        key_name: "{{ec2_key_name}}"
        region: "{{ec2_region}}"
        instance_ids: '{{loadtesters.instance_ids}}'
