---
- name: Increase open file descriptor limit for nginx
  lineinfile:
    name: /etc/nginx/nginx.conf
    regexp: '^worker_rlimit_nofile'
    line: 'worker_rlimit_nofile 65535;'
    insertafter: '^worker_processes'
    state: present
  tags: ['reunhangout', 'reunhangout-post']

#- block:
#  # TODO: Remove this block once deployed everywhere
#  - name: Stop old services
#    service: name={{item}} state=stopped
#    with_items: ['reunhangout-worker-websocket', 'reunhangout', 'reunhangout-interface']
#    ignore_errors: yes
#
#  - name: Disable old websocket worker systemd
#    command: systemctl disable {{item}}.service
#    with_items: ['reunhangout-worker-websocket', 'reunhangout', 'reunhangout-interface']
#    ignore_errors: yes
#
#  - name: Remove old service files
#    file:
#      path: "/usr/lib/systemd/system/{{item}}.service"
#      state: absent
#    with_items: ['reunhangout-worker-websocket', 'reunhangout', 'reunhangout-interface']
#  tags: ['reunhangout', 'reunhangout-post', 'reunhangout-systemd']

# Systemd config for asgi/workers
- block:
  - name: Copy reunhangout service templates
    template:
      src: "{{item}}"
      dest: "/usr/lib/systemd/system/{{item}}"
    with_items:
      - reunhangout-worker-websocket@.service
      - reunhangout-worker-http@.service
      - reunhangout-interface.service
      - reunhangout-workers.target
    notify: restart reunhangout services

  - name: Enable websocket workers
    systemd:
      name: "reunhangout-worker-websocket@{{item}}"
      enabled: yes
    with_sequence: start=1 end={{reunhangout_worker_processes}}
    notify: restart reunhangout services

  - name: Enable http workers
    systemd:
      name: "reunhangout-worker-http@{{item}}"
      enabled: yes
    with_sequence: start=1 end={{reunhangout_worker_processes}}
    notify: restart reunhangout services

  - name: Enable interface
    systemd:
      name: "reunhangout-interface"
      enabled: yes
    notify: restart reunhangout services

  - name: Enable target
    systemd:
      name: "reunhangout-workers.target"
      enabled: yes
    notify: restart reunhangout services

  tags: ['reunhangout', 'reunhangout-post', 'reunhangout-systemd']
  
- name: Build prod assets
  become: yes
  become_user: "{{main_user_name}}" 
  command: "{{django_project_dir}}build_prod_assets.sh"
  register: build_prod_assets
  changed_when: build_prod_assets.stdout.find("Changed") != -1
  notify: restart reunhangout services
  tags: ['reunhangout', 'reunhangout-post', 'djangocode']

- name: Sync auth providers
  command: "{{django_venv_dir}}bin/python {{django_project_dir}}manage.py sync_auth_providers"
  register: sync_auth_providers
  changed_when: sync_auth_providers.stdout.find("changed") != -1
  tags: ['reunhangout', 'reunhangout-post']

- name: Collect static again
  become: yes
  become_user: "{{main_user_name}}" 
  register: collectstatic_output
  changed_when: 'not collectstatic_output.stdout.startswith("\n0 static files copied")'
  command: "{{django_venv_dir}}bin/python {{django_project_dir}}manage.py collectstatic --noinput"
  tags: ['reunhangout', 'reunhangout-post', 'djangocode']
